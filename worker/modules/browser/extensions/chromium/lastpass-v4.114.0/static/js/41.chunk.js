(window["webpackJsonp@lastpass/extension-ui"]=window["webpackJsonp@lastpass/extension-ui"]||[]).push([[41],{1021:function(e,n){},1022:function(e,n){},1024:function(e,n){},1025:function(e,n){},1426:function(e,n,t){"use strict";t.r(n);var i=t(4),o=(t(0),t(1023)),l=t(1835),c=t(1226),u=t(1),a={id:0,type:"TryAutoFill",visible:!0,completed:null,seenAt:null,color:l.a.GREEN},s={complete:jest.fn(),hideExpandedSkillInDrawer:jest.fn()};jest.mock("../../hooks/use-secondary-onboarding-actions",(function(){return{useSecondaryOnboardingActions:function(){return s}}})),jest.mock("react-redux",(function(){return Object(i.a)(Object(i.a)({},jest.requireActual("react-redux")),{},{useSelector:jest.fn().mockReturnValueOnce({settings:{features:{new_infield_design_for_onboarding:!0}}})})}));var r=function(e){return Object(o.mount)(Object(u.jsx)(c.default,{skill:e,expanded:!0,fromAllSkillsDialog:!1}))};it("should render the TryAutoFill component without crashing",(function(){var e=r(a);expect(e).toHaveLength(1)})),it('should invoke the complete function when clicking the input, after "fill" and finally "All set" action button',(function(){var e=r(a);e.find("input.autofill-input").simulate("click"),e.find("div.old-infield-menu-item").simulate("click"),e.find("button.action-cta").simulate("click"),e.unmount(),expect(s.complete).toHaveBeenCalled(),expect(s.hideExpandedSkillInDrawer).toHaveBeenCalled()}))}}]);